#!/usr/bin/env python3

import ROOT
import pickle
import os, sys, time

ROOT.gROOT.SetBatch(True)

run_number = int(sys.argv[1])
run_folder = f'../data/tiger/RUN_{run_number}'
with open(f'../out/tiger_efine_calibration_SH_run{run_number}.txt', 'w') as fout:
  fin = open(f'{run_folder}/CONF_run_{run_number}.pkl', 'rb')
  run_parameters = pickle.load(fin)
  fin.close()
  print(f'# Generated by run {run_number}', file=fout)
  print('# gemroc tiger channel saturation_value vcasp thr maximum_efine', file=fout)
  for gr in range(20):
    if f'GEMROC {gr}' not in run_parameters.keys():
      continue
    run_parameters_gr = run_parameters[f'GEMROC {gr}']
    t = ROOT.TChain('tigerTL', 'tigerTL')
    t.Add(f'{run_folder}/SubRUN_*_GEMROC_{gr}_TL.root')
    t.Draw('eFine:tigerID*64+channelID >> h(512, 0, 512, 1008, 0, 1008)', '', 'colz')
    h = ROOT.gDirectory.Get('h')
    for tiger in range(8):
      run_parameters_t = run_parameters_gr[f'TIGER {tiger}']
      vcasp = run_parameters_t['Global']['Vcasp_Vth']
      for channel in range(64):
        saturation_value = 45.0
        thr = run_parameters_t[f'Ch {channel}']['Vth_T1']
        enabled = run_parameters_t[f'Ch {channel}']['TriggerMode'] != 3
        if not enabled:
          continue
        if run_parameters_t[f'Ch {channel}']['TriggerMode'] != 0:
          v = run_parameters_t[f'Ch {channel}']['TriggerMode']
          print(f'Strange TriggerMode: {v}')
        hist_efine = h.ProjectionY(f'h_{gr}_{tiger}_{channel}', channel+tiger*64+1, channel+tiger*64+1)
        # hist_efine.Print()
        maximum = int(hist_efine.GetMaximum())
        min_limit = int(maximum * 0.003)
        min_limit = min_limit if min_limit > 1 else 2
        max_bin_n = hist_efine.FindLastBinAbove(min_limit)
        maximum_efine = int(hist_efine.GetXaxis().GetBinCenter(max_bin_n))
        maximum_efine = maximum_efine if maximum_efine > 0 else 1007
        print(f'{gr} {tiger} {channel} {saturation_value} {vcasp} {thr} {maximum_efine}', file=fout)
  # print(run_parameters['GEMROC 0']['TIGER 0']['Ch 0'].keys())
